- platform: template
  sensors:
    harmony_hub:
      value_template: '{{ states.remote.harmony_tv.attributes.current_activity }}'
      friendly_name: 'Harmony Hub'

- platform: command_line
  name: CPU Temp
  command: "/bin/cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "ºC"
  value_template: '{{ value | multiply(0.001) | round(1) }}'

- platform: systemmonitor
  resources:
    - type: processor_use
    - type: memory_use_percent
    - type: since_last_boot
    - type: disk_use_percent
      arg: /

- platform: template
  sensors:
    since_last_boot_templated:
      value_template: >-
        {% if states.sensor.since_last_boot.state.count("day") > 0 %}
        {{states.sensor.since_last_boot.state.split(",") [0] +
        "," +
        states.sensor.since_last_boot.state.split(",") [1].split(":") [0] +
        " hours, " +
        states.sensor.since_last_boot.state.split(",") [1].split(":") [1] +
        " minutes" }}
        {% else %}
        {{ "0 days, " +
        states.sensor.since_last_boot.state.split(",") [0].split(":") [0] +
        " hours, " +
        states.sensor.since_last_boot.state.split(",") [0].split(":") [1] +
        " minutes" }}
        {% endif %}

- platform: yr
  monitored_conditions:
      - temperature
      - symbol
      - precipitation
      - windSpeed
      - pressure
      - windDirection
      - humidity
      - fog
      - cloudiness
      - lowClouds
      - mediumClouds
      - highClouds
      - dewpointTemperature

- platform: google_travel_time
  name: Mona zur Arbeit
  api_key: !secret google_api_key
  origin: zone.home
  destination: zone.work_mona
  options:
    mode: driving

- platform: google_travel_time
  name: Mona nach Hause
  api_key: !secret google_api_key
  origin: zone.work_mona
  destination: zone.home
  options:
    mode: driving

- platform: google_travel_time
  name: Stephan zur Arbeit
  api_key: !secret google_api_key
  origin: zone.home
  destination: zone.work_stephan
  options:
    mode: transit

- platform: google_travel_time
  name: Stephan nach Hause
  api_key: !secret google_api_key
  origin: zone.work_stephan
  destination: zone.home
  options:
    mode: transit

- platform: google_travel_time
  name: ETA Stephan
  api_key: !secret google_api_key
  origin: device_tracker.phone_phone
  destination: zone.home
  options:
    mode: transit

- platform: mqtt
  state_topic: "owntracks/phone/phone"
  name: "Stephans Phone Battery"
  unit_of_measurement: "%"
  value_template: '{{ value_json.batt }}'

- platform: synologydsm
  host: !secret syn_host
  port: !secret syn_port
  username: !secret syn_user
  password: !secret syn_password
  monitored_conditions:
    - cpu_total_load
    - memory_real_usage
    - network_up
    - network_down

    - disk_temp
    - disk_smart_status
    - volume_percentage_used

- platform: sabnzbd
  host: !secret sab_host
  port: !secret sab_port
  api_key: !secret sab_api_key
  ssl: true
  monitored_variables:
    - current_status
    - speed
    - queue_size
    - queue_remaining
    - disk_size
    - disk_free

### Philips Hue Motion Sensor

- platform: rest
  resource: !secret temp_eingang
  value_template: '{{ value_json.state.temperature | float / 100 }}'
  unit_of_measurement: °C
  name: 'Temp Eingang'

- platform: rest
  resource: !secret lux_eingang
  value_template: '{{ value_json.state.lightlevel }}'
  unit_of_measurement: Lux
  name: 'Lux Eingang'

- platform: rest
  resource: !secret lux_eingang
  value_template: '{{ value_json.config.battery }}'
  unit_of_measurement: '%'
  name: 'Bat Eingang'

- platform: rest
  resource: !secret temp_flur
  value_template: '{{ value_json.state.temperature | float / 100 }}'
  unit_of_measurement: °C
  name: 'Temp Flur'

- platform: rest
  resource: !secret lux_flur
  value_template: '{{ value_json.state.lightlevel }}'
  unit_of_measurement: Lux
  name: 'Lux Flur'

- platform: rest
  resource: !secret lux_eingang
  value_template: '{{ value_json.config.battery }}'
  unit_of_measurement: '%'
  name: 'Bat Flur'

### Philips Hue Dimmer Switch

- platform: rest
  resource: !secret hue_dimmer
  value_template: '{{ value_json.config.battery }}'
  unit_of_measurement: '%'
  name: 'Bat Dimmer'

### WeatherPi API

- platform: rest
  resource: !secret weatherpi
  value_template: '{{ value_json.sensor_temp_inside }}'
  unit_of_measurement: °C
  name: 'Temp Wohnzimmer'

- platform: rest
  resource: !secret weatherpi
  value_template: '{{ value_json.sensor_humidity_inside }}'
  unit_of_measurement: '%'
  name: 'Hum Wohnzimmer'

- platform: rest
  resource: !secret weatherpi
  value_template: '{{ value_json.sensor_pressure_inside }}'
  unit_of_measurement: hPa
  name: 'Pres Wohnzimmer'

- platform: rest
  resource: !secret weatherpi
  value_template: '{{ value_json.sensor_temp_outside }}'
  unit_of_measurement: °C
  name: 'Temp Balkon'

- platform: rest
  resource: !secret weatherpi
  value_template: '{{ value_json.sensor_humidity_outside }}'
  unit_of_measurement: '%'
  name: 'Hum Balkon'

- platform: rest
  resource: !secret weatherpi
  value_template: '{{ value_json.sensor_pressure_outside }}'
  unit_of_measurement: hPa
  name: 'Pres Balkon'